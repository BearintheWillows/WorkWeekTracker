// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WWTApi.Data;

#nullable disable

namespace WWTApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220907045132_ChangeStopIdIndex")]
    partial class ChangeStopIdIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModels.WorkModels.DailyRoute", b =>
                {
                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("StopId")
                        .HasColumnType("int");

                    b.HasKey("RunId", "ShopId", "DayOfWeek");

                    b.HasIndex("ShopId", "DayOfWeek")
                        .IsUnique();

                    b.HasIndex("StopId", "DayOfWeek", "RunId")
                        .IsUnique();

                    b.ToTable("DailyRoutes");
                });

            modelBuilder.Entity("DataModels.WorkModels.Run", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LocationArea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("DataModels.WorkModels.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("DataModels.WorkModels.DailyRoute", b =>
                {
                    b.HasOne("DataModels.WorkModels.Run", "Run")
                        .WithMany("DailyRoutePlans")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModels.WorkModels.Shop", "Shop")
                        .WithMany("DailyRoutePlans")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Run");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("DataModels.WorkModels.Run", b =>
                {
                    b.Navigation("DailyRoutePlans");
                });

            modelBuilder.Entity("DataModels.WorkModels.Shop", b =>
                {
                    b.Navigation("DailyRoutePlans");
                });
#pragma warning restore 612, 618
        }
    }
}
